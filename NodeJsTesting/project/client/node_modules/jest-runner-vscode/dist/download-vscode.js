"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const console_1 = require("console");
const stream_1 = __importDefault(require("stream"));
const test_electron_1 = require("@vscode/test-electron");
async function downloadVSCode(version, platform, silent = false, useStdErr = false) {
    let nullStream;
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    const stdoutDescriptor = Object.getOwnPropertyDescriptor(process, 'stdout');
    if (silent) {
        nullStream = new stream_1.default.Writable({ write: () => undefined });
        global.console = new console_1.Console(nullStream);
        Object.defineProperty(process, 'stdout', {
            value: nullStream,
        });
    }
    else if (useStdErr) {
        global.console = new console_1.Console(process.stderr);
        Object.defineProperty(process, 'stdout', {
            value: process.stderr,
        });
    }
    const vscodePath = await (0, test_electron_1.downloadAndUnzipVSCode)(version, platform);
    if (nullStream) {
        nullStream.destroy();
    }
    if (silent || useStdErr) {
        global.console = console;
        Object.defineProperty(process, 'stdout', stdoutDescriptor);
    }
    return vscodePath;
}
exports.default = downloadVSCode;
